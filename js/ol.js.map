{"version":3,"sources":["webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/ol/extent.js","webpack://ol/./node_modules/ol/events.js","webpack://ol/./node_modules/ol/util.js","webpack://ol/./node_modules/ol/events/EventType.js","webpack://ol/./node_modules/ol/render/canvas.js","webpack://ol/./node_modules/ol/geom/GeometryType.js","webpack://ol/./node_modules/ol/math.js","webpack://ol/./node_modules/ol/TileState.js","webpack://ol/./node_modules/ol/transform.js","webpack://ol/./node_modules/ol/asserts.js","webpack://ol/./node_modules/ol/dom.js","webpack://ol/./node_modules/ol/obj.js","webpack://ol/./node_modules/ol/ViewHint.js","webpack://ol/./node_modules/ol/Object.js","webpack://ol/./node_modules/ol/css.js","webpack://ol/./node_modules/ol/array.js","webpack://ol/./node_modules/ol/proj/Projection.js","webpack://ol/./node_modules/ol/proj/epsg3857.js","webpack://ol/./node_modules/ol/proj/epsg4326.js","webpack://ol/./node_modules/ol/proj/projections.js","webpack://ol/./node_modules/ol/proj/transforms.js","webpack://ol/./node_modules/ol/proj.js","webpack://ol/./node_modules/ol/functions.js","webpack://ol/./node_modules/ol/ImageState.js","webpack://ol/./node_modules/ol/has.js","webpack://ol/./node_modules/ol/proj/Units.js","webpack://ol/./node_modules/ol/easing.js","webpack://ol/./node_modules/ol/events/Event.js","webpack://ol/./node_modules/ol/layer/Property.js","webpack://ol/./node_modules/ol/geom/GeometryLayout.js","webpack://ol/./node_modules/ol/ViewProperty.js","webpack://ol/./node_modules/ol/control/Control.js","webpack://ol/./node_modules/ol/extent/Relationship.js","webpack://ol/./node_modules/ol/Collection.js","webpack://ol/./node_modules/ol/CollectionEventType.js","webpack://ol/./node_modules/ol/pointer/EventType.js","webpack://ol/./node_modules/ol/MapProperty.js","webpack://ol/./node_modules/ol/OverlayPositioning.js","webpack://ol/./node_modules/ol/geom/flat/transform.js","webpack://ol/./node_modules/ol/coordinate.js","webpack://ol/./node_modules/ol/events/Target.js","webpack://ol/./node_modules/ol/color.js","webpack://ol/./node_modules/ol/LayerType.js","webpack://ol/./node_modules/ol/render/EventType.js","webpack://ol/./node_modules/ol/colorlike.js","webpack://ol/./node_modules/ol/reproj/common.js","webpack://ol/./node_modules/ol/size.js","webpack://ol/./node_modules/ol/source/State.js","webpack://ol/./node_modules/ol/ObjectEventType.js","webpack://ol/./node_modules/ol/layer/Layer.js","webpack://ol/./node_modules/ol/geom/Geometry.js","webpack://ol/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol/./node_modules/ol/MapEventType.js","webpack://ol/./node_modules/ol/geom/flat/inflate.js","webpack://ol/./node_modules/ol/rotationconstraint.js","webpack://ol/./node_modules/ol/geom/flat/contains.js","webpack://ol/./node_modules/ol/geom/flat/closest.js","webpack://ol/./node_modules/ol/geom/flat/deflate.js","webpack://ol/./node_modules/ol/geom/flat/simplify.js","webpack://ol/./node_modules/ol/tilegrid/common.js","webpack://ol/./node_modules/ol/extent/Corner.js","webpack://ol/./node_modules/ol/TileRange.js","webpack://ol/./node_modules/ol/Disposable.js","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/ol/style/Stroke.js","webpack://ol/./node_modules/ol/sphere.js","webpack://ol/./node_modules/ol/style/IconImageCache.js","webpack://ol/./node_modules/ol/pointer/EventSource.js","webpack://ol/./node_modules/ol/pointer/MouseSource.js","webpack://ol/./node_modules/ol/pointer/MsSource.js","webpack://ol/./node_modules/ol/pointer/NativeSource.js","webpack://ol/./node_modules/ol/pointer/PointerEvent.js","webpack://ol/./node_modules/ol/pointer/TouchSource.js","webpack://ol/./node_modules/ol/pointer/PointerEventHandler.js","webpack://ol/./node_modules/ol/geom/flat/area.js","webpack://ol/./node_modules/ol/geom/LinearRing.js","webpack://ol/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol/./node_modules/ol/geom/flat/reverse.js","webpack://ol/./node_modules/ol/geom/flat/orient.js","webpack://ol/./node_modules/ol/geom/Polygon.js","webpack://ol/./node_modules/ol/control/util.js","webpack://ol/./node_modules/ol/control/Zoom.js","webpack://ol/./node_modules/ol/control/Rotate.js","webpack://ol/./node_modules/ol/control/Attribution.js","webpack://ol/./node_modules/ol/AssertionError.js","webpack://ol/./node_modules/ol/Observable.js","webpack://ol/./node_modules/ol/layer/Base.js","webpack://ol/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol/./node_modules/ol/geom/flat/segments.js","webpack://ol/./node_modules/ol/structs/LRUCache.js","webpack://ol/./node_modules/ol/layer/VectorRenderType.js","webpack://ol/./node_modules/ol/geom/flat/length.js","webpack://ol/./node_modules/ol/style/Image.js","webpack://ol/./node_modules/ol/source/Source.js","webpack://ol/./node_modules/ol/style/Circle.js","webpack://ol/./node_modules/ol/style/RegularShape.js","webpack://ol/./node_modules/ol/style/Fill.js","webpack://ol/./node_modules/ol/style/Style.js","webpack://ol/./node_modules/ol/geom/Point.js","webpack://ol/./node_modules/ol/Overlay.js","webpack://ol/./node_modules/ol/MapEvent.js","webpack://ol/./node_modules/ol/MapBrowserEvent.js","webpack://ol/./node_modules/ol/MapBrowserEventType.js","webpack://ol/./node_modules/ol/MapBrowserPointerEvent.js","webpack://ol/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol/./node_modules/ol/structs/PriorityQueue.js","webpack://ol/./node_modules/ol/TileQueue.js","webpack://ol/./node_modules/ol/layer/Group.js","webpack://ol/./node_modules/ol/PluggableMap.js","webpack://ol/./node_modules/ol/Kinetic.js","webpack://ol/./node_modules/ol/interaction/Property.js","webpack://ol/./node_modules/ol/interaction/Interaction.js","webpack://ol/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol/./node_modules/ol/events/condition.js","webpack://ol/./node_modules/ol/interaction/Pointer.js","webpack://ol/./node_modules/ol/interaction/DragPan.js","webpack://ol/./node_modules/ol/interaction/DragRotate.js","webpack://ol/./node_modules/ol/render/Box.js","webpack://ol/./node_modules/ol/interaction/DragBox.js","webpack://ol/./node_modules/ol/interaction/DragZoom.js","webpack://ol/./node_modules/ol/events/KeyCode.js","webpack://ol/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol/./node_modules/ol/interaction/PinchRotate.js","webpack://ol/./node_modules/ol/interaction/PinchZoom.js","webpack://ol/./node_modules/ol/ImageBase.js","webpack://ol/./node_modules/ol/ImageCanvas.js","webpack://ol/./node_modules/ol/render/Event.js","webpack://ol/./node_modules/ol/render/VectorContext.js","webpack://ol/./node_modules/ol/render/canvas/Immediate.js","webpack://ol/./node_modules/ol/renderer/Map.js","webpack://ol/./node_modules/ol/renderer/canvas/Map.js","webpack://ol/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol/./node_modules/ol/renderer/Layer.js","webpack://ol/./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://ol/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol/./node_modules/ol/render/ReplayGroup.js","webpack://ol/./node_modules/ol/render/ReplayType.js","webpack://ol/./node_modules/ol/geom/flat/textpath.js","webpack://ol/./node_modules/ol/render/canvas/Instruction.js","webpack://ol/./node_modules/ol/render/replay.js","webpack://ol/./node_modules/ol/render/canvas/Replay.js","webpack://ol/./node_modules/ol/render/canvas/ImageReplay.js","webpack://ol/./node_modules/ol/render/canvas/LineStringReplay.js","webpack://ol/./node_modules/ol/render/canvas/PolygonReplay.js","webpack://ol/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol/./node_modules/ol/style/TextPlacement.js","webpack://ol/./node_modules/ol/render/canvas/TextReplay.js","webpack://ol/./node_modules/ol/render/canvas/ReplayGroup.js","webpack://ol/./node_modules/ol/renderer/vector.js","webpack://ol/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol/./node_modules/ol/layer/VectorTileRenderType.js","webpack://ol/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./node_modules/ol/Map.js","webpack://ol/./node_modules/ol/interaction.js","webpack://ol/./node_modules/ol/Tile.js","webpack://ol/./node_modules/ol/ImageTile.js","webpack://ol/./node_modules/ol/tilecoord.js","webpack://ol/./node_modules/ol/TileCache.js","webpack://ol/./node_modules/ol/reproj.js","webpack://ol/./node_modules/ol/reproj/Triangulation.js","webpack://ol/./node_modules/ol/reproj/Tile.js","webpack://ol/./node_modules/ol/tileurlfunction.js","webpack://ol/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol/./node_modules/ol/tilegrid.js","webpack://ol/./node_modules/ol/source/Tile.js","webpack://ol/./node_modules/ol/source/TileEventType.js","webpack://ol/./node_modules/ol/source/TileImage.js","webpack://ol/./node_modules/ol/source/XYZ.js","webpack://ol/./node_modules/ol/source/UrlTile.js","webpack://ol/./node_modules/ol/centerconstraint.js","webpack://ol/./node_modules/ol/View.js","webpack://ol/./node_modules/ol/resolutionconstraint.js","webpack://ol/./main.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/ol/Feature.js","webpack://ol/./node_modules/ol/layer/Vector.js","webpack://ol/./node_modules/ol/source/OSM.js","webpack://ol/./node_modules/ol/control/FullScreen.js","webpack://ol/./node_modules/ol/control/MousePosition.js","webpack://ol/./node_modules/ol/control/OverviewMap.js","webpack://ol/./node_modules/ol/control/ScaleLine.js","webpack://ol/./node_modules/ol/control/ZoomSlider.js","webpack://ol/./node_modules/ol/control/ZoomToExtent.js","webpack://ol/./node_modules/ol/control.js","webpack://ol/./node_modules/ol/format/FormatType.js","webpack://ol/./node_modules/ol/featureloader.js","webpack://ol/./node_modules/ol/loadingstrategy.js","webpack://ol/./node_modules/ol/source/VectorEventType.js","webpack://ol/./node_modules/ol/structs/RBush.js","webpack://ol/./node_modules/ol/source/Vector.js","webpack://ol/./node_modules/ol/style/IconAnchorUnits.js","webpack://ol/./node_modules/ol/style/IconImage.js","webpack://ol/./node_modules/ol/style/IconOrigin.js","webpack://ol/./node_modules/ol/style/Icon.js","webpack://ol/./node_modules/ol/geom/flat/interpolate.js","webpack://ol/./node_modules/ol/geom/LineString.js","webpack://ol/./node_modules/ol/layer/TileProperty.js","webpack://ol/./node_modules/ol/layer/Tile.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","width","check","done","clear","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","offsetX","offsetY","translate","rotate","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","angleInRadians","PI","angleInDegrees","a","b","IDLE","LOADING","LOADED","EMPTY","ABORT","reset","setFromArray","compose","invert","tmp_","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","e","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","determinant","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","createCanvasContext2D","opt_width","opt_height","canvas","getContext","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","assign","getValues","var_sources","arguments$1","arguments","TypeError","output","source","values","ANIMATING","INTERACTING","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","this","__proto__","constructor","BaseObject","Observable","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","cache","family","split","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","opt_func","opt_strict","compare","every","currentVal","res","Projection_Projection","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","proj_transform","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","transformExtent","ol_extent","transformWithProjections","addCommon","TRUE","FALSE","VOID","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","window","devicePixelRatio","has","setLineDash","FEET","PIXELS","TILE_PIXELS","USFEET","easeIn","pow","easeOut","inAndOut","linear","stopPropagation","propagationStopped","preventDefault","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","XY","XYZ","XYM","XYZM","CENTER","RESOLUTION","ROTATION","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","map_","listenerKeys","render","setTarget","disposeInternal","getMap","setMap","map","getOverlayContainerStopEvent","POSTRENDER","getElementById","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","Property","CollectionEvent","opt_element","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","array","getArray","item","insertAt","elem","ADD","removeAt","prev","REMOVE","setAt","opt_except","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","LAYERGROUP","SIZE","TARGET","VIEW","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","transform2D","opt_dest","dest","anchor","anchorX","anchorY","delta","coordinate1","coordinate2","cosAngle","sinAngle","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","hasListener","opt_type","asString","asArray","toString","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromString","cacheSize","g","exec","el","rgb","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","IMAGE","TILE","VECTOR_TILE","VECTOR","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","hasArea","ratio","opt_size","toSize","UNDEFINED","READY","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","changed","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","visible","minResolution","maxResolution","tmpTransform","ol_transform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","util","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","getRevision","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","proj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","flat_transform","ol_Object","transformGeom2D","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","simpleGeometry","MOVESTART","MOVEEND","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","disable","none","createSnapToN","createSnapToZero","_math_js__WEBPACK_IMPORTED_MODULE_0__","theta","floor","opt_tolerance","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","wn","maxSquaredDelta","arrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","sqrt","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","douglasPeucker","snap","quantizeArray","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","round","quantize","simplifiedEnds","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","TileRange","tileRange","contains","tileCoord","containsTileRange","getSize","disposed_","dispose","rbush","default","quickselect","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","right","all","_all","search","bbox","result","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","join","Stroke","color_","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","checksum_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","getDistance","DEFAULT_RADIUS","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","getKey","src","crossOrigin","expire","iconImage","setSize","maxCacheSize","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","originalEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","browserEvent","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler_PointerEventHandler","EventTarget","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","ol_events","eventCopy","fireEvent","EventType","contains_","container","contained","inType","wrapMouseEvent","area_linearRing","twiceArea","area_linearRings","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closest","inflate","GeometryType","deflate","geom_SimpleGeometry","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","fromExtent","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","intersectsextent","defaults","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","_Attribution_js__WEBPACK_IMPORTED_MODULE_1__","_Rotate_js__WEBPACK_IMPORTED_MODULE_2__","_Zoom_js__WEBPACK_IMPORTED_MODULE_3__","controls","zoom","zoomOptions","rotateOptions","attribution","attributionOptions","_Control_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_easing_js__WEBPACK_IMPORTED_MODULE_4__","Zoom","className","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","setAttribute","title","createTextNode","handleClick_","outElement","cssClasses","duration_","duration","zoomByDelta_","getView","currentResolution","getResolution","newResolution","constrainResolution","getAnimating","cancelAnimations","animate","easing","setResolution","_Control_js__WEBPACK_IMPORTED_MODULE_0__","_css_js__WEBPACK_IMPORTED_MODULE_1__","_easing_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","Rotate","label","label_","classList","tipLabel","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","resetNorth_","getRotation","setRotation","mapEvent","viewState","msTransform","webkitTransform","_array_js__WEBPACK_IMPORTED_MODULE_0__","_Control_js__WEBPACK_IMPORTED_MODULE_1__","_css_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","collapseLabel","collapseLabel_","activeLabel","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","innerHTML","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","AssertionError","message","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","revision_","on","once","un","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","properties","state_","state","layer","getOpacity","sourceState","getVisible","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","intersectsLineString","intersectsLinearRingArray","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","ret","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","lineStringLength","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getScale","getRotateWithView","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","snapToPixel","listenImageChange","thisArg","unlistenImageChange","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","wrapX","getProjection","getResolutions","getWrapX","refresh","setAttributions","setState","attributionLike","Circle","RegularShape","CircleStyle","points","fill","stroke","atlasManager","getFill","getStroke","getRadius","atlasManager_","setRadius","radius_","render_","checksums_","canvas_","hitDetectionCanvas_","fill_","origin_","points_","radius1","radius2_","radius2","angle_","stroke_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","ImageState","imageSize","strokeStyle","strokeWidth","colorlike","renderOptions","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","id","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","ol_color","strokeChecksum","fillChecksum","checksum","Fill","style_Fill","toFunction","createDefaultStyle","createEditingStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","text_","zIndex_","styleFunction","styles","asserts","getGeometry","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","defaultStyles","white","blue","concat","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_0__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getId","getOffset","getPosition","getPositioning","updatePixelPosition","getOverlayContainer","insertBefore","childNodes","panIntoView","getTargetElement","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","getPixelFromCoordinate","newCenterPx","getCoordinateFromPixel","box","getBoundingClientRect","pageXOffset","top","pageYOffset","isRendered","pixel","mapSize","updateRenderedPosition","bottom","getOptions","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","opt_dragging","getEventPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","pointer_EventType","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","ObjectEventType","collectionEvent","pos","ownLayerState","State","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","interactions","overlays","layerGroup","MapProperty","View","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","cancelAnimationFrame","forEachFeatureAtPixel","hitTolerance","layerFilter","functions","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","ViewHint","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","renderSync","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","ol_size","isDef","getHints","skippedFeatureUids","usedTiles","renderFrame","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","parseFloat","unskipFeature","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","update","lastIndex","firstIndex","ol_Kinetic","interaction_Property","opt_duration","rotateWithoutConstraints","constrainRotation","currentRotation","currentCenter","zoomByDelta","resolutions","calculateCenterZoom","constrainCenter","zoomWithoutConstraints","setCenter","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","setHint","centroid","ol_coordinate","centerpx","interaction_DragRotate","DragRotate","lastAngle_","getConstraints","rotationconstraint","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","calculateExtent","boxPixelExtent","factor","getResolutionForExtent","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","opt_direction","ol_ImageBase","ImageBase","getPixelRatio","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","err","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","centerX","centerY","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","MapRenderer","CanvasMapRenderer","css","composeEvent","clearRect","calculateMatrices2D","save","viewResolution","layerRenderer","getLayerRenderer","prepareFrame","composeFrame","restore","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg2","numLayers","forEachLayerAtCoordinate","registerLayerRenderers","constructors","ctor","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","removeLayerRendererByKey_","translatedCoordinate","projectionExtent","worldWidth","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","z","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getMinZoom","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","common","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","getRenderMode","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","Replay_tmpExtent","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","coords","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","getStyleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","control_util","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","opt_tileCoord","getKeyZXY","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","Triangulation_Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","ol_proj","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetResolution","sourceResolution","targetCenter","sourceCenter","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","sources","getTileSize","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","reproj_render","leftToLoad","sourceListenKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","TileGrid_TileGrid","zoomFactor","minZoom","resolutions_","origins","zoomFactor_","maxZoom","origins_","tileSizes_","tileSizes","tileSize_","tileSize","tilegrid_common","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getMaxZoom","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","source_Source","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","XYZ_XYZ","TileImage","xyzOptions","gridOptions","createXYZ","reprojectionErrorThreshold","tileUrlFunction","url","urls","UrlTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","match","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","View_View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","resolutionConstraintInfo","maxResolution_","minResolution_","minZoom_","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setZoom","animationCallback","series","animation","complete","sourceRotation","targetRotation","getInteracting","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","filter","Boolean","getSizeFromViewport_","selector","querySelector","metrics","opt_delta","opt_hints","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","hint","returnValue","createExtent","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","enableRotation","Feature","Vector","OSM","Icon","geom","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","createStyleFunction","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","setId","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","ATTRIBUTION","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","control_Control","PROJECTION","mapProjection_","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","OverlayPositioning","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","LN2","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","firstElementChild","drag","getPositionForResolution_","amount","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","FormatType","ARRAY_BUFFER","JSON","XML","featureloader_xhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","ol_obj","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconOrigin","Icon_Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","segments","getCoordinateAtM","opt_extrapolate","getCoordinateAt","pointY","cumulativeLengths","interpolatePoint","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","layer_Layer"],"mappings":"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","file":"ol.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 83);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","module.exports = {\n  Map: require('ol/Map').default,\n  View: require('ol/View').default,\n  Overlay: require('ol/Overlay').default,\n  Feature: require('ol/Feature').default,\n  control: require('ol/control'),\n  proj: require('ol/proj'),\n  layer: {\n    Tile: require('ol/layer/Tile').default,\n    Vector: require('ol/layer/Vector').default,\n  },\n  source: {\n    XYZ: require('ol/source/XYZ').default,\n    OSM: require('ol/source/OSM').default,\n    Vector: require('ol/source/Vector').default,\n  },\n  style: {\n    Style: require('ol/style/Style').default,\n    Stroke: require('ol/style/Stroke').default,\n    Icon: require('ol/style/Icon').default,\n  },\n  geom: {\n    Point: require('ol/geom/Point').default,\n    LineString: require('ol/geom/LineString').default,\n  },\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n\n//# sourceMappingURL=control.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map"],"sourceRoot":""}